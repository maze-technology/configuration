name: OpenTofu CI/CD

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
  DYNAMODB_TABLE_NAME: ${{ vars.DYNAMODB_TABLE_NAME }}
  KMS_KEY_ALIAS: ${{ vars.KMS_KEY_ALIAS }}
  TOFU_VERSION: '1.9.0'
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_ORG_NAMESPACE: ${{ vars.DOCKER_ORG_NAMESPACE }}
jobs:
  plan-opentofu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          role-session-name: MazeGitHubActionsSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Write GitHub App Private Key to file
        working-directory: infrastructure
        run: |
          echo "${{ secrets.GH_APP_PRIVATE_KEY }}" > private-key.pem
          chmod 600 private-key.pem

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TOFU_VERSION }}

      - name: Initialize OpenTofu with Backend
        working-directory: infrastructure
        run: |
          tofu init \
            -backend-config="bucket=${S3_BUCKET_NAME}" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="kms_key_id=${KMS_KEY_ALIAS}" \
            -backend-config="dynamodb_table=${DYNAMODB_TABLE_NAME}"

      - name: Plan OpenTofu Changes
        working-directory: infrastructure
        run: |
          tofu plan \
          -var="github_owner=${{ github.repository_owner }}" \
          -var="github_app_id=${{ secrets.GH_APP_ID }}" \
          -var="github_app_installation_id=${{ secrets.GH_APP_INSTALLATION_ID }}" \
          -var="github_app_private_key_path=private-key.pem" \
          -var="docker_username=${{ env.DOCKER_USERNAME }}" \
          -var="docker_password=${{ secrets.DOCKER_PASSWORD }}" \
          -var="docker_org_namespace=${{ env.DOCKER_ORG_NAMESPACE }}" \
          -out=tfplan

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infrastructure/tfplan

      - name: Generate OpenTofu Plan Output
        working-directory: infrastructure
        if: github.event_name == 'pull_request'
        run: |
          tofu show -json tfplan | jq '.' > tfplan.json

          echo "### OpenTofu Plan Summary ðŸš€" > plan_output.md
          echo "" >> plan_output.md
          echo "**Changes:**" >> plan_output.md
          jq -r '
            .resource_changes[] |
            "ðŸ”¹ \(.type) `\(.name)` - \(.change.actions | join(", "))"
          ' tfplan.json >> plan_output.md
          echo "" >> plan_output.md

          # Truncate the plan_output.md if it exceeds 65536 characters
          if [ $(wc -c < plan_output.md) -gt 65536 ]; then
            echo "Output is too long, truncating..." >> plan_output.md
            head -c 65536 plan_output.md > plan_output_truncated.md
            mv plan_output_truncated.md plan_output.md
          fi

      - name: Post Plan Output as PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: infrastructure/plan_output.md
        if: github.event_name == 'pull_request'

  apply-opentofu:
    name: 'Apply OpenTofu Configuration'
    runs-on: ubuntu-latest
    needs: [plan-opentofu]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          role-session-name: MazeGitHubActionsSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Write GitHub App Private Key to file
        working-directory: infrastructure
        run: |
          echo "${{ secrets.GH_APP_PRIVATE_KEY }}" > private-key.pem
          chmod 600 private-key.pem

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TOFU_VERSION }}

      - name: Initialize OpenTofu with Backend
        working-directory: infrastructure
        run: |
          tofu init \
            -backend-config="bucket=${S3_BUCKET_NAME}" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="kms_key_id=${KMS_KEY_ALIAS}" \
            -backend-config="dynamodb_table=${DYNAMODB_TABLE_NAME}"

      - name: Download tfplan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: infrastructure

      - name: Apply OpenTofu Changes
        working-directory: infrastructure
        run: |
          tofu apply -auto-approve tfplan
